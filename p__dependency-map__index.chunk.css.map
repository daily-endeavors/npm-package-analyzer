{"version":3,"file":"p__dependency-map__index.chunk.css","mappings":"AAqNA,4BACE,aACA,sBACA,WAEF,8BACE,aACA,WACA,YASF,qBACE,aACA,yBACA,eACA","sources":["webpack://gui/./pages/dependency-map/index.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div id=\"g6Container\"></div>\n    <div>\n      <input type=\"checkbox\" id=\"checkbox\" v-model=\"isDebug\" />\n      <label for=\"checkbox\">调试模式:{{ isDebug }}</label>\n    </div>\n    <template v-if=\"isDebug\">\n      <div>\n        <div>数据分布 =></div>\n        <div>\n          {{\n            JSON.stringify(\n              {\n                nodes节点数: echartData.nodes.length,\n                edges边数: echartData.edges.length,\n                颜色列表: colorList,\n                option,\n              },\n              null,\n              2,\n            )\n          }}\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport * as TypePackageRecord from '../../../cli/src/resource/type/record';\nimport * as echarts from 'echarts';\nimport * as Consts from './resource/const/index';\n\nimport demoData from './resource/data/demo.json';\nimport * as Util from './util/index';\nimport { onMounted, ref } from 'vue';\n\nconst isDebug = ref(false);\ntype EChartsOption = echarts.EChartsOption;\n\n// 优先尝试从全局变量中获取, 没有则使用demo数据\nconst parseData: TypePackageRecord.packageAnaylzeResult[] =\n  (globalThis as any)?.npmPackageAnalyzeResultList ?? demoData;\nconst echartData = Util.infoDb2Echarts(parseData as any);\n\nconst legendSelected: Record<string, boolean> = {};\nfor (let key of echartData.categoryMap.keys()) {\n  legendSelected[key] = !!echartData.categoryMap.get(key)?.isShow;\n}\n\nconst option: EChartsOption = {\n  title: {\n    text: 'NPM 依赖分析',\n  },\n  tooltip: {\n    // 参考 https://echarts.apache.org/zh/option.html#series-graph.tooltip.formatter\n    formatter: '{b}',\n    trigger: 'item',\n  },\n  legend: {\n    show: false,\n    data: [...echartData.dataCategoryList],\n    selected: legendSelected,\n    // .map((uuid) => {\n    //   return {\n    //     name: uuid,\n    //   };\n    // }),\n  },\n  animationDurationUpdate: 1500,\n  animationEasingUpdate: 'quinticInOut',\n  series: [\n    {\n      type: 'graph',\n      layout: 'force',\n      animation: false,\n      // selectedMode: 'series',\n      force: {\n        // edgeLength: 5,\n        // repulsion: 20,\n        // gravity: 0.2,\n        repulsion: 50,\n        edgeLength: 50,\n        gravity: 0.02,\n      },\n      categories: [...echartData.dataCategoryList].map((uuid) => {\n        return {\n          name: uuid,\n        };\n      }),\n      // progressiveThreshold: 700,\n      data: echartData.nodes,\n      links: echartData.edges,\n      roam: true,\n      lineStyle: {\n        width: 0.5,\n        curveness: 0.3,\n        opacity: 0.7,\n      },\n      emphasis: {\n        focus: 'adjacency',\n        label: {\n          position: 'right',\n          show: true,\n        },\n      },\n      edgeSymbol: ['circle', 'arrow'],\n      edgeSymbolSize: [1, 5],\n      edgeLabel: {\n        fontSize: 20,\n      },\n    },\n  ],\n};\nconst colorList = [\n  ...new Set(\n    echartData.nodes.map(function (node) {\n      return node.itemStyle.color;\n    }),\n  ).values(),\n];\n\nlet myEchart: ReturnType<typeof echarts.init>;\n\nonMounted(() => {\n  const chartDom = document.getElementById('g6Container')!;\n  myEchart = echarts.init(chartDom);\n  const width = document.querySelector('#g6Container')?.clientWidth ?? 500;\n  const height = document.querySelector('#g6Container')?.clientHeight ?? 500;\n\n  myEchart.setOption(option, true);\n\n  // // 按图例隐藏节点\n  // for (let categoryKey of echartData.categoryMap.keys()) {\n  //   const item = echartData.categoryMap.get(categoryKey)!;\n  //   if (item.isShow) {\n  //     myEchart.dispatchAction({\n  //       type: 'legendSelect',\n  //       // 图例名称\n  //       name: categoryKey,\n  //     });\n  //   } else {\n  //     myEchart.dispatchAction({\n  //       type: 'legendUnSelect',\n  //       // 图例名称\n  //       name: categoryKey,\n  //     });\n  //   }\n  // }\n\n  myEchart.on('click', function (params) {\n    if (params.dataType !== 'node') {\n      return;\n    }\n\n    const targetClickUuid = params.data.id;\n    console.log('targetClickUuid =>', params);\n\n    const targetClickItem = echartData.uuidMap.get(targetClickUuid)!;\n    const categoryStatus = echartData.categoryMap.get(targetClickUuid)!;\n    if (targetClickItem.deepLevel < Consts.MinShowLevel) {\n      // 层级小于Consts.MinShowLevel 直接展示子节点\n      for (let categoryUuid of Object.values(\n        targetClickItem.detectInfo.dependencyInstallStatus.dependencies,\n      )) {\n        myEchart.dispatchAction({\n          type: 'legendSelect',\n          // 图例名称\n          name: categoryUuid,\n        });\n      }\n\n      categoryStatus.isShow = true;\n      echartData.categoryMap.set(targetClickUuid, categoryStatus);\n      return;\n    }\n\n    // 如果 category 状态为显示，则通过一定规则隐藏所有 childres\n\n    if (categoryStatus.isShow) {\n      for (let categoryUuid of Object.values(\n        targetClickItem.detectInfo.dependencyInstallStatus.dependencies,\n      )) {\n        myEchart.dispatchAction({\n          type: 'legendUnSelect',\n          // 图例名称\n          name: categoryUuid,\n        });\n      }\n\n      categoryStatus.isShow = false;\n      echartData.categoryMap.set(targetClickUuid, categoryStatus);\n    } else {\n      // 如 category 状态为隐藏，则显示\n\n      for (let categoryUuid of Object.values(\n        targetClickItem.detectInfo.dependencyInstallStatus.dependencies,\n      )) {\n        myEchart.dispatchAction({\n          type: 'legendSelect',\n          // 图例名称\n          name: categoryUuid,\n        });\n      }\n\n      categoryStatus.isShow = true;\n      echartData.categoryMap.set(targetClickUuid, categoryStatus);\n    }\n  });\n});\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  flex-direction: column;\n  width: 50vw;\n}\n#g6Container {\n  display: flex;\n  width: 100%;\n  height: 48vh;\n  /* border: 1px solid #f0f0f0;\n  border-radius: 8px;\n\n  margin-left: 4px;\n  margin-right: 4px;\n  margin-top: 16px;\n  margin-bottom: 16px; */\n}\ndiv {\n  display: flex;\n  white-space: break-spaces;\n  max-width: 50vw;\n  word-break: break-all;\n}\n</style>\n"],"names":[],"sourceRoot":""}