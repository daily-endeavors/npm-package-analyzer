{"version":3,"file":"139.async.js","mappings":"6IA6PA,Q,iFC1PaA,EAAmB,EAInBC,GAAe,E,oBDEtBC,GAAe,CACjB,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BAC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","sources":["webpack://gui/./pages/dependency-map/resource/const/color.ts","webpack://gui/./pages/dependency-map/resource/const/index.ts","webpack://gui/./pages/dependency-map/util/index.ts","webpack://gui/./pages/dependency-map/index.vue","webpack://gui/./pages/dependency-map/index.vue?d38a"],"sourcesContent":["// 提供颜色列表, 用于生成节点颜色. \n// 具体色值来自colorhunt, 接口请求如下\n// curl \"https://colorhunt.co/php/feed.php\" -H \"referer: https://colorhunt.co/palettes/popular\" --data-raw \"step=0&sort=popular&tags=&timeframe=4000\" --compressed >> color.json\n// curl \"https://colorhunt.co/php/feed.php\" -H \"referer: https://colorhunt.co/palettes/popular\" --data-raw \"step=1&sort=popular&tags=&timeframe=4000\" --compressed >> color.json\n// curl \"https://colorhunt.co/php/feed.php\" -H \"referer: https://colorhunt.co/palettes/popular\" --data-raw \"step=2&sort=popular&tags=&timeframe=4000\" --compressed >> color.json\n// curl \"https://colorhunt.co/php/feed.php\" -H \"referer: https://colorhunt.co/palettes/popular\" --data-raw \"step=3&sort=popular&tags=&timeframe=4000\" --compressed >> color.json\n// curl \"https://colorhunt.co/php/feed.php\" -H \"referer: https://colorhunt.co/palettes/popular\" --data-raw \"step=4&sort=popular&tags=&timeframe=4000\" --compressed >> color.json\n// curl \"https://colorhunt.co/php/feed.php\" -H \"referer: https://colorhunt.co/palettes/popular\" --data-raw \"step=5&sort=popular&tags=&timeframe=4000\" --compressed >> color.json\n\nconst colorStrList = [\n    \"222831393e4600adb5eeeeee\",\n    \"e3fdfdcbf1f5a6e3e971c9ce\",\n    \"ffc7c7ffe2e2f6f6f68785a2\",\n    \"f9ed69f08a5db83b5e6a2c70\",\n    \"f9f7f7dbe2ef3f72af112d4e\",\n    \"08d9d6252a34ff2e63eaeaea\",\n    \"f38181fce38aeaffd095e1d3\",\n    \"f4eeffdcd6f7a6b1e1424874\",\n    \"a8d8eaaa96dafcbad3ffffd2\",\n    \"fff5e4ffe3e1ffd1d1ff9494\",\n    \"ad8b73ceab93e3caa5fffbe9\",\n    \"ffb6b9fae3d9bbded661c0bf\",\n    \"1b262c0f4c753282b8bbe1fa\",\n    \"364f6b3fc1c9f5f5f5fc5185\",\n    \"b7c4cfeee3cbd7c0ae967e76\",\n    \"defcf9cadefcc3bef0cca8e9\",\n    \"b1b2ffaac4ffd2daffeef1ff\",\n    \"7d5a50b4846ce5b299fcdec0\",\n    \"fcd1d1ece2e1d3e0dcaee1e1\",\n    \"f8ede3bdd2b6a2b29f798777\",\n    \"ffeddbedcdbbe3b7a0bf9270\",\n    \"e4f9f530e3ca11999e40514e\",\n    \"f67280c06c846c5b7b355c7d\",\n    \"f5efe6e8dfcaaebdca7895b2\",\n    \"2b2e4ae8454590374953354a\",\n    \"2121213232320d737714ffec\",\n    \"fff8ea9e7676815b5b594545\",\n    \"fcd8d4fdf6f0f8e2cff5c6aa\",\n    \"bad7dfffe2e2f6f6f699ddcc\",\n    \"f7fbfcd6e6f2b9d7ea769fcd\",\n    \"e23e5788304e522546311d3f\",\n    \"fdefeff4dfd0dad0c2cdbba7\",\n    \"f8ede3dfd3c3d0b8a87d6e83\",\n    \"ffd5cdefbbcfc3aed68675a9\",\n    \"ffcfdffefdcae0f9b5a5dee5\",\n    \"6096b493bfcfbdcdd6eee9da\",\n    \"ffe6e6f2d1d1daeaf1c6dce4\",\n    \"f6f6f6ffe2e2ffc7c7aaaaaa\",\n    \"93b5c6c9ccd5e4d8dcffe3e3\",\n    \"fef5edd3e4cdadc2a999a799\",\n    \"ff9292ffb4b4ffdcdcffe8e8\",\n    \"2c36393f4e4fa27b5cdcd7c9\",\n    \"fefcf3f5ebe0f0dbdbdba39a\",\n    \"f0f5f9c9d6df52616b1e2022\",\n    \"00b8a9f8f3d4f6416cffde7d\",\n    \"a8e6cfdcedc1ffd3b6ffaaa5\",\n    \"feffdeddffbc91c78852734d\",\n    \"be9fe1c9b6e4e1ccecf1f1f6\",\n    \"2d4059ea5455f07b3fffd460\",\n    \"b5eaeaedf6e5ffbcbcf38ba0\",\n    \"fcf8e8d4e2d4ecb390df7861\",\n    \"a0937de7d4b5f6e6cbe3cdc1\",\n    \"8d7b68a4907cc8b6a6f1dec9\",\n    \"edf1d69dc08b60996640513b\",\n    \"f2d7d9d3cedf9cb4cc748da6\",\n    \"f0ebe3e4dccf7d9d9c576f72\",\n    \"7d5a5af1d1d1f3e1e1faf2f2\",\n    \"ffc8c8ff9999444f5a3e4149\",\n    \"fff5e4ffc4c4ee6983850e35\",\n    \"48466d3d84a846cdcfabedd8\",\n    \"98ddcad5ecc2ffd3b4ffaaa7\",\n    \"faf3e0eabf9fb689731e212d\",\n    \"968c83d6d2c4fff5eaf7dad9\",\n    \"cdf0eaf9f9f9f7dbf0beaee2\",\n    \"999b84d8ac9cefd9d1f4eeed\",\n    \"14285027496d0c7b9300a8cc\",\n    \"2c3333395b64a5c9cae7f6f2\",\n    \"f5e8c7deba9d9e77776f4c5b\",\n    \"a1eafbfdfdfdffcef3cabbe9\",\n    \"e5d9b6a4be7b5f8d4e285430\",\n    \"3ec1d3f6f7d7ff9a00ff165d\",\n    \"a75d5dd3756bf0997dffc3a1\",\n    \"5f71616d8b74efead8d0c9c0\",\n    \"1fab8962d2a29df3c4d7fbe8\",\n    \"fdffbcffeebbffdcb8ffc1b6\",\n    \"eac7c7a0c3d2f7f5ebeae0da\",\n    \"ffe8dffffffff0f0f0888888\",\n    \"ffb6b9fae3d9bbded68ac6d1\",\n    \"def5e5bcead59ed5c58ec3b0\",\n    \"f0ece3dfd3c3c7b198596e79\",\n    \"f9ececf0d9dac8d9ebecf2f9\",\n    \"753422b05b3bd79771ffebc9\",\n    \"87805eb09b71d8cca3eddfb3\",\n    \"ffbbccffccccffddccffeecc\",\n    \"557571d49a89f7d1baf4f4f4\",\n    \"f4f4f2e8e8e8bbbfca495464\",\n    \"d4a5a5ffecdaf9ffeaa6d0e4\",\n    \"ea907afbc687f4f7c5aacdbe\",\n    \"f8ede3dfd3c3d0b8a885586f\",\n    \"fcf5eefbe8e7f7dddeffc4d0\",\n    \"00000052057b892cdcbc6ff1\",\n    \"fdeedcffd8a9f1a661e38b29\",\n    \"f5eee6f3d7cae6a4b4c86b85\",\n    \"3c625561876ea6bb8deae7b1\",\n    \"ffb6b6fde2e2aacfcf679b9b\",\n    \"0000003d0000950101ff0000\",\n    \"dff4f3dde7f2b9bbdf878ecd\",\n    \"222831393e46ffd369eeeeee\",\n    \"f4f9f9ccf2f4a4ebf3aaaaaa\",\n    \"f39189bb80826e7582046582\",\n    \"fff5ebdeedf0f4c7abb2b8a3\",\n    \"f1f6f914274e3948679ba4b4\",\n    \"fef7dce6ddc6c2b8a3a19882\",\n    \"8e806ac3b091e4cda7ffe6bc\",\n    \"867070d5b4b4e4d0d0f5ebeb\",\n    \"f6f5f5d3e0ea1687a7276678\",\n    \"3951444e6c50aa8b56f0ebce\",\n    \"fbf0f0dfd3d3b8b0b07c7575\",\n    \"30384100adb5eeeeeeff5722\",\n    \"ffd4d4ffffe8cde990aacb73\",\n    \"645caaa084cabface0ebc7e8\",\n    \"f3f1f5f0d9ffbfa2db7f7c82\",\n    \"5571537d8f69a9af7ee6e5a3\",\n    \"dddddd22283130475ef05454\",\n    \"0a26471442722052952c74b3\",\n    \"fcecddffc288fea82fff6701\",\n    \"caf7e3edffecf6dfebe4bad4\",\n    \"ffb9b9ffddd2ffacc7ff8dc7\",\n    \"ccd5aee9edc9fefae0faedcd\",\n    \"698474889e81bac7a7e5e4cc\",\n    \"f3c5c5c1a3a3886f6f694e4e\",\n    \"d9e4ddfbf7f0cdc9c3555555\",\n    \"838383ad9d9dd9adadfccbcb\",\n    \"ffd5e5ffffdda0ffe681f5ff\",\n    \"faf8f1faeab1e5ba73c58940\",\n    \"155263ff6f3cff9a3cffc93c\",\n    \"7c9473cfdac8e8eae6cdd0cb\",\n    \"e5e3c9b4cfb094b49f789395\",\n    \"937dc2c689c6ffabe1ffe6f7\",\n    \"fcf8ecd0e8f279a3b1456268\",\n    \"e0ece4f7f2e7d8d3cd797a7e\",\n    \"876445ca965ceec373f4dfba\",\n    \"ccf6c8fafcc2f6d6adf9c0c0\",\n    \"6fe7dd3490de6639a6521262\",\n    \"f8ecd1deb6abac7d8885586f\",\n    \"ccd6a6dae2b6f4ead5fffbe9\",\n    \"e1f2fbf1f9f9f3dfe3e9b2bc\",\n    \"402218865439c68b59d7b19d\",\n    \"f7ecdee9dac19ed2c654bab9\",\n    \"4834346b4f4feed6c4fff3e4\",\n    \"edcfa9e89f71d57149aa4a30\",\n    \"8ef6e49896f1d59bf6edb1f1\",\n    \"07689fa2d5f2fafafaff7e67\",\n    \"2f5d625e8b7ea7c4bcdfeeea\",\n    \"3038413a4750d72323eeeeee\",\n    \"a8e6cffdffabffd3b6ffaaa5\",\n    \"ffe6e6ffabe1a685e26155a6\",\n    \"ede4e0c8dbbe9f8772665a48\",\n    \"f5e8c7ecccb2deb6abac7088\",\n    \"f0ece2dfd3c3c7b198596e79\",\n    \"bfcba85b8a7256776c464f41\",\n    \"7579e79ab3f5a3d8f4b9fffc\",\n    \"2d24245c3d2eb85c38e0c097\",\n    \"f5f0bbc4dfaa90c8ac73a9ad\",\n    \"f4bfbfffd9c0faf0d78cc0de\",\n    \"94b49fcee5d0fcf8e8ecb390\",\n    \"fafafae8f1f5005691004a7c\",\n    \"dbd0c0faeee0f9e4c8f9cf93\",\n    \"a9907ef3debaabc4aa675d50\",\n    \"14285027496d00909edae1e7\",\n    \"3630624d4c7d827397d8b9c3\",\n    \"a7727deddbc7f8ead8f9f5e7\",\n    \"f0e5cff7f6f2c8c6c64b6587\",\n    \"1a374d4068826998abb1d0e0\",\n    \"fee3ecf9c5d5f999b7f2789f\",\n    \"dcedc2ffd3b5ffaaa6ff8c94\",\n    \"bce6ebfdcfdffbbedffca3cc\",\n    \"be8abfea9abbfea5adf8c3af\",\n    \"cc9b6df1ca89f2dac3c8c2bc\",\n    \"faebe0c9e4c5b5cda3c1ac95\",\n    \"8e3200a64b2ad7a86effebc1\",\n    \"d8e3e751c4d3126e82132c33\",\n    \"f6e5f5fbf4f9f6e7e6b9cced\",\n    \"171717444444da0037ededed\",\n    \"fcf8e8ecdfc8ecb390df7861\",\n    \"f85f73fbe8d3928a97283c63\",\n    \"61764b9ba17bcfb997fad6a5\",\n    \"472d2d553939704f4fa77979\",\n    \"f3f8ffdeecffc6cfffe8d3ff\",\n    \"e4fbffb8b5ff7868e6edeef7\",\n    \"9e9d89e4d3cfe2bcb7b67162\",\n    \"071a5208697217b978a7ff83\",\n    \"fce2dbf1c6d3e4a3d4c295d8\",\n    \"d9d7f1fffddee7fbbeffcbcb\",\n    \"fb929effdfdffff6f6aedefc\",\n    \"ccd6a6dae2b6dfe8ccf7eddb\",\n    \"f9f5f6f8e8eefdcedff2bed1\",\n    \"7286d38ea7e9e5e0fffff2f2\",\n    \"85603f9e7540bd9354e3d18a\",\n    \"fbc6a4f4a9a8ce97b0afb9c8\",\n    \"e6ba95fafdd6e4e9bea2b38b\",\n    \"272343ffffffe3f6f5bae8e8\",\n    \"b983ff94b3fd94daff99feff\",\n    \"1c67583d8361d6cda4eef2e6\",\n    \"99e1e5f3e8cbf2c6b4fbafaf\",\n    \"cee5d0f3f0d7fed2aaffbf86\",\n    \"e8ded2a3d2ca5eaaa8056676\",\n    \"bedcfa98acf8b088f9da9ff9\",\n    \"beebe9f4dadaffb6b9f6eec7\",\n    \"cc7351e08f62ded7b19dab86\",\n    \"cffffef9f7d9fce2ceffc1f3\",\n    \"27374d526d829db2bfdde6ed\",\n    \"ff8787f8c4b4e5ebb2bce29e\",\n    \"fff0f0ebd4d4835858463333\",\n    \"faf7f0cdfcf6bccef898a8f8\",\n    \"eeebdd8100006300001b1717\",\n    \"ffacacffbfa9ffebb4fbffb1\",\n    \"d4ecdd345b63152d35112031\",\n    \"1c3879607eaaeae3d2f9f5eb\",\n    \"e97777ff9f9ffcddb0fffad7\",\n    \"ecf9fffffbebffe7ccf8cba6\",\n    \"f0e4d7f5c0c0ff71719fd8df\",\n    \"ffeeeefff6eaf7e9d7ebd8c3\",\n    \"d3e4cd99a799f2ddc1e2c2b9\",\n    \"fef1e6f9d5a7ffb08590aacb\",\n    \"645cbba084dcbface2ebc7e6\",\n    \"faf1e6fdfaf6e4efe7064420\",\n    \"eeebddce12128100001b1717\",\n    \"fcffa6c1ffd7b5deffcab8ff\",\n    \"ffc996ff84749f5f80583d72\",\n    \"232931393e464ecca3eeeeee\",\n    \"f6f6f6d6e4f01e56a0163172\",\n    \"f7f7e8c7cfb79dad7f557174\",\n    \"e9d5da8273974d4c7d363062\",\n    \"e5dcc3c7bea2aaa4929a9483\",\n    \"ffd4b2fff6bdceedc786c8bc\",\n    \"440a6793329eb4aee8ffe3fe\",\n    \"fcf8e894b49fecb390df7861\",\n    \"194350ff8882ffc2b49dbeb9\",\n    \"f1ecc3c9d8b657837b515e63\",\n    \"79b4b7fefbf3f8f0df9d9d9d\",\n    \"cee5d0f3f0d7d8b3845e454b\",\n    \"caf7e3f8ededf6dfebe4bad4\",\n    \"00e0ff74f9ffa6fff2e8ffe8\",\n    \"3932324d45458d6262ed8d8d\",\n    \"f9ebc8fefbe7dae5d0a0bcc2\",\n    \"1a120b3c2a21d5cea3e5e5cb\",\n    \"f7fd04f9b208f98404fc5404\",\n    \"ebfffac6fce56ef3d60dceda\",\n    \"fbfacddebaceba94d17f669d\",\n]\n\nexport const colorList: string[] = []\nfor (const colorStr of colorStrList) {\n    for (let startPos of [0, 6, 12, 18, 24]) {\n        const color = colorStr.slice(startPos, startPos + 6)\n        colorList.push(color)\n    }\n}\n\n\n/**\n * 来自material的颜色\n * https://m3.material.io/styles/color/the-color-system/tokens\n */\nexport const materialColorList = [\n    \"F3EDF7\",\n    \"E8DEF8\",\n    \"E6E0E9\",\n    \"D0BCFF\"\n\n    // \"6750A4\",\n    // // \"EADDFF\",\n    // // \"FFFFFF\",\n    // \"21005E\",\n    // \"D0BCFF\",\n    // \"625B71\",\n    // \"E8DEF8\",\n    // // \"FFFFFF\",\n    // \"1E192B\",\n    // \"7D5260\",\n    // \"FFD8E4\",\n    // // \"FFFFFF\",\n    // \"370B1E\",\n    // // \"FEF7FF\",\n    // \"DED8E1\",\n    // // \"FEF7FF\",\n    // // \"FFFFFF\",\n    // \"F7F2FA\",\n    // \"F3EDF7\",\n    // \"ECE6F0\",\n    // \"E6E0E9\",\n    // \"E7E0EC\",\n    // \"1C1B1F\",\n    // \"49454E\",\n    // \"313033\",\n    // \"F4EFF4\",\n    // // \"FEF7FF\",\n    // \"1C1B1F\",\n    // \"B3261E\",\n    // \"F9DEDC\",\n    // // \"FFFFFF\",\n    // \"410E0B\",\n    // \"79747E\",\n    // \"C4C7C5\",\n    // \"000000\",\n    // \"6750A4\",\n    // \"000000\",\n].sort(() => {\n    return Math.random() - 0.5\n})","/**\n * 默认展示依赖层级在3以内的所有节点\n*/\nexport const DefaultShowLevel = 3\n/**\n * 收缩层级时, 最多只收缩到第二层\n */\nexport const MinShowLevel = 2","// 将infodb的格式转换为g6可读的格式\nimport * as TypePackageRecord from '../../../../cli/src/resource/type/record';\nimport * as ConstColor from '../resource/const/color';\nimport * as Consts from '../resource/const/index';\nimport * as TypeG6 from '../resource/type/g6-echarts';\n\n/**\n * 将依赖数据转换为G6绘图所需数据\n * @param packageRecord\n * @returns\n */\nexport function infoDb2G6(\n    packageRecordList: TypePackageRecord.packageAnaylzeResult[],\n): TypeG6.G6Data {\n    const g6NodeList: TypeG6.G6Node[] = [];\n    const g6EdgeList: TypeG6.G6Edge[] = [];\n\n    // 先初始化uuid => item 映射表\n    const uuidMap = new Map();\n    for (let packageRecord of packageRecordList) {\n        uuidMap.set(packageRecord.uuid, packageRecord);\n        for (let item of packageRecord.packageList) {\n            uuidMap.set(item.uuid, item);\n        }\n    }\n\n    const uniqueNodeSet = new Set<string>();\n    const uniquePathSet = new Set<string>();\n\n    // 然后再绘制依赖图\n    for (let packageRecord of packageRecordList) {\n        for (let record of [...packageRecord.packageList]) {\n            const node: TypeG6.G6Node = {\n                id: record.uuid,\n                label: `${record.packageName}@${record.version}`,\n            };\n            // 避免重复添加node节点\n            if (uniqueNodeSet.has(node.id) === false) {\n                uniqueNodeSet.add(node.id);\n                g6NodeList.push(node);\n            }\n            for (let dependencyPackageName of Object.keys(\n                record.detectInfo.dependencyInstallStatus.dependencies,\n            )) {\n                const dependencyPackageUuid =\n                    record.detectInfo.dependencyInstallStatus.dependencies[\n                    dependencyPackageName\n                    ];\n                if (dependencyPackageUuid === '') {\n                    // 未检测到依赖, 自动跳过\n                    continue;\n                }\n                if (uuidMap.has(dependencyPackageUuid) === false) {\n                    // 数据表中无此id, 自动跳过\n                    // console.log(\"auto skip =>\", dependencyPackageUuid)\n                    continue;\n                }\n                // 避免重复添加edge边\n                const pathLink = `${record.uuid}->${dependencyPackageUuid}`;\n                if (uniquePathSet.has(pathLink) === false) {\n                    uniquePathSet.add(pathLink);\n                    g6EdgeList.push({\n                        source: record.uuid,\n                        target: dependencyPackageUuid,\n                    });\n                }\n            }\n        }\n    }\n\n    return {\n        nodes: g6NodeList,\n        edges: g6EdgeList,\n    };\n}\n\nlet colorCounter = 0;\n/**\n * 自动从颜色列表中获取一个色值\n * @returns\n */\nexport function getRgbColor(): `#${string}` {\n    colorCounter = colorCounter + 1;\n    const colorList = ConstColor.materialColorList;\n    const colorRgb = colorList[colorCounter % colorList.length];\n    return `#${colorRgb}`;\n}\n\n/**\n * 将依赖数据转换为Echarts绘图所需数据\n * @param packageRecord\n * @returns\n */\nexport function infoDb2Echarts(\n    packageRecordList: TypePackageRecord.packageAnaylzeResult[],\n): TypeG6.EchartsData {\n    const echartsNodeList: TypeG6.EchartsNode[] = [];\n    const echartsEdgeList: TypeG6.EchartsEdge[] = [];\n\n    // 数据量太大, 先只展示第一个\n    // packageRecordList = [packageRecordList[0]]\n\n    // 先初始化uuid => item 映射表\n    const uuidMap: Map<TypePackageRecord.item['uuid'], TypePackageRecord.item> =\n        new Map();\n    for (let packageRecord of packageRecordList) {\n        uuidMap.set(packageRecord.uuid, packageRecord);\n        for (let item of packageRecord.packageList) {\n            uuidMap.set(item.uuid, item);\n        }\n    }\n    const dataCategoryList = [...uuidMap.keys()];\n\n    const uniqueNodeSet = new Set<string>();\n    const uniquePathSet = new Set<string>();\n\n    const ConstSymbolSize = {\n        // // 根节点\n        // [0]: [100, 10],\n        // // 第一层依赖\n        // [1]: [50, 10],\n        // // 第二层依赖\n        // [2]: [20, 10],\n        // [3]: [10, 10],\n        // \"default\": [5, 5]\n        // 根节点\n        [0]: 100,\n        // 第一层依赖\n        [1]: 50,\n        // 第二层依赖\n        [2]: 20,\n        [3]: 10,\n        default: 5,\n    };\n\n    const categoryMap: Map<\n        string,\n        {\n            isShow: boolean;\n        }\n    > = new Map();\n\n    // 然后再绘制依赖图\n    for (let packageRecord of packageRecordList) {\n        let recordCounter = 0;\n        // 每个模块的颜色不一样\n        const packageColor = getRgbColor();\n        for (let record of [...packageRecord.packageList]) {\n            recordCounter = recordCounter + 1;\n\n            const symbolSize =\n                // @ts-ignore\n                ConstSymbolSize[record.deepLevel as any] ?? ConstSymbolSize.default;\n\n            // symbolSize[1] = Math.max(symbolSize[1], `${record.packageName}@${record.version}`.length)\n\n            // 将子依赖项对应的categoryIndex添加到Set中, 方便后续展示\n            if (categoryMap.has(record.uuid) === false) {\n                categoryMap.set(record.uuid, {\n                    isShow: record.deepLevel < Consts.DefaultShowLevel,\n                });\n            }\n            const node = {\n                id: record.uuid,\n                symbol: 'circle',\n                itemStyle: {\n                    color: packageColor,\n                },\n                symbolSize: symbolSize,\n                // 每项一个类目\n                category: dataCategoryList.indexOf(record.uuid),\n                name: `${record.packageName}\\n${record.version}`,\n                label: {\n                    show: true,\n                    overflow: 'truncate',\n                },\n                // y: 0,\n                // x: 0,\n                attributes: {},\n            };\n\n            // 避免重复添加node节点\n            if (uniqueNodeSet.has(node.id) === false) {\n                uniqueNodeSet.add(node.id);\n                // @ts-ignore\n                echartsNodeList.push(node);\n            }\n            for (let dependencyPackageName of Object.keys(\n                record.detectInfo.dependencyInstallStatus.dependencies,\n            )) {\n                const dependencyPackageUuid =\n                    record.detectInfo.dependencyInstallStatus.dependencies[\n                    dependencyPackageName\n                    ];\n                if (dependencyPackageUuid === '') {\n                    // 未检测到依赖, 自动跳过\n                    continue;\n                }\n                const dependencyPackage = uuidMap.get(dependencyPackageUuid);\n                if (dependencyPackage === undefined) {\n                    // 数据表中无此id, 自动跳过\n                    // console.log(\"auto skip =>\", dependencyPackageUuid)\n                    continue;\n                }\n                // 避免重复添加edge边\n                const pathLink = `${record.uuid}->${dependencyPackageUuid}`;\n                if (uniquePathSet.has(pathLink) === false) {\n                    uniquePathSet.add(pathLink);\n                    const link = {\n                        source: record.uuid,\n                        target: dependencyPackageUuid,\n                        tooltip: `${record.packageName}->${dependencyPackage.packageName}`,\n                        size: 1,\n                    };\n                    // @ts-ignore\n                    echartsEdgeList.push(link);\n                }\n            }\n        }\n    }\n\n    return {\n        nodes: echartsNodeList,\n        edges: echartsEdgeList,\n        categoryMap: categoryMap,\n        dataCategoryList,\n        uuidMap,\n    };\n}\n","<template>\n  <div class=\"container\">\n    <div class=\"base-container\">\n      <div ref=\"containerRef\" class=\"echart-container\"></div>\n    </div>\n    <div class=\"debug-container\">\n      <div>\n        <input type=\"checkbox\" id=\"checkbox\" v-model=\"isDebug\" />\n        <label for=\"checkbox\">调试模式:{{ isDebug }}</label>\n      </div>\n      <template v-if=\"isDebug\">\n        <div>\n          <div>数据分布 =></div>\n          <div>\n            {{\n              JSON.stringify(\n                {\n                  nodes节点数: echartData.nodes.length,\n                  edges边数: echartData.edges.length,\n                  颜色列表: colorList,\n                  option,\n                },\n                null,\n                2,\n              )\n            }}\n          </div>\n        </div>\n      </template>\n    </div>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport * as echarts from 'echarts';\nimport * as Consts from './resource/const/index';\n\nimport * as Util from './util/index';\nimport * as GlobalUtil from '@/utils/index';\nimport { onMounted, ref, shallowRef } from 'vue';\n\nconst containerRef = shallowRef();\n\nconst { packageAnaylzeResult } = defineProps<{\n  packageAnaylzeResult: ReturnType<\n    typeof GlobalUtil.getPackageAnaylzeResult\n  >[number];\n}>();\n\nconst isDebug = ref(false);\ntype EChartsOption = echarts.EChartsOption;\n\nconst echartData = Util.infoDb2Echarts([packageAnaylzeResult]);\n\nconst legendSelected: Record<string, boolean> = {};\nfor (let key of echartData.categoryMap.keys()) {\n  legendSelected[key] = !!echartData.categoryMap.get(key)?.isShow;\n}\n\nconst option: EChartsOption = {\n  // title: {\n  //   text: `${packageAnaylzeResult.packageName}@${packageAnaylzeResult.version} 依赖分析`,\n  // },\n  tooltip: {\n    // 参考 https://echarts.apache.org/zh/option.html#series-graph.tooltip.formatter\n    formatter: '{b}',\n    trigger: 'item',\n  },\n  legend: {\n    show: false,\n    data: [...echartData.dataCategoryList],\n    selected: legendSelected,\n    // .map((uuid) => {\n    //   return {\n    //     name: uuid,\n    //   };\n    // }),\n  },\n  animationDurationUpdate: 1500,\n  animationEasingUpdate: 'quinticInOut',\n  series: [\n    {\n      type: 'graph',\n      layout: 'force',\n      animation: false,\n      // selectedMode: 'series',\n      force: {\n        // edgeLength: 5,\n        // repulsion: 20,\n        // gravity: 0.2,\n        repulsion: 50,\n        edgeLength: 100,\n        gravity: 0.01,\n      },\n      categories: [...echartData.dataCategoryList].map((uuid) => {\n        return {\n          name: uuid,\n        };\n      }),\n      // progressiveThreshold: 700,\n      data: echartData.nodes,\n      links: echartData.edges,\n      roam: true,\n      lineStyle: {\n        width: 0.5,\n        curveness: 0.3,\n        opacity: 0.7,\n      },\n      emphasis: {\n        focus: 'adjacency',\n        label: {\n          position: 'right',\n          show: true,\n        },\n      },\n      edgeSymbol: ['circle', 'arrow'],\n      edgeSymbolSize: [1, 5],\n      edgeLabel: {\n        fontSize: 20,\n      },\n    },\n  ],\n};\nconst colorList = [\n  ...new Set(\n    echartData.nodes.map((node: any) => {\n      return node.itemStyle.color;\n    }),\n  ).values(),\n];\n\nlet myEchart: ReturnType<typeof echarts.init>;\n\nonMounted(() => {\n  console.log('containerRef.value => ', containerRef.value);\n  myEchart = echarts.init(containerRef.value);\n  const width = document.querySelector('#g6Container')?.clientWidth ?? 500;\n  const height = document.querySelector('#g6Container')?.clientHeight ?? 500;\n\n  myEchart.setOption(option, true);\n\n  // // 按图例隐藏节点\n  // for (let categoryKey of echartData.categoryMap.keys()) {\n  //   const item = echartData.categoryMap.get(categoryKey)!;\n  //   if (item.isShow) {\n  //     myEchart.dispatchAction({\n  //       type: 'legendSelect',\n  //       // 图例名称\n  //       name: categoryKey,\n  //     });\n  //   } else {\n  //     myEchart.dispatchAction({\n  //       type: 'legendUnSelect',\n  //       // 图例名称\n  //       name: categoryKey,\n  //     });\n  //   }\n  // }\n\n  myEchart.on('click', function (params) {\n    if (params.dataType !== 'node') {\n      return;\n    }\n\n    // @ts-ignore\n    const targetClickUuid = params.data.id;\n    console.log('targetClickUuid =>', params);\n\n    const targetClickItem = echartData.uuidMap.get(targetClickUuid)!;\n    const categoryStatus = echartData.categoryMap.get(targetClickUuid)!;\n    if (targetClickItem.deepLevel < Consts.MinShowLevel) {\n      // 层级小于Consts.MinShowLevel 直接展示子节点\n      for (let categoryUuid of Object.values(\n        targetClickItem.detectInfo.dependencyInstallStatus.dependencies,\n      )) {\n        myEchart.dispatchAction({\n          type: 'legendSelect',\n          // 图例名称\n          name: categoryUuid,\n        });\n      }\n\n      categoryStatus.isShow = true;\n      echartData.categoryMap.set(targetClickUuid, categoryStatus);\n      return;\n    }\n\n    // 如果 category 状态为显示，则通过一定规则隐藏所有 childres\n\n    if (categoryStatus.isShow) {\n      for (let categoryUuid of Object.values(\n        targetClickItem.detectInfo.dependencyInstallStatus.dependencies,\n      )) {\n        myEchart.dispatchAction({\n          type: 'legendUnSelect',\n          // 图例名称\n          name: categoryUuid,\n        });\n      }\n\n      categoryStatus.isShow = false;\n      echartData.categoryMap.set(targetClickUuid, categoryStatus);\n    } else {\n      // 如 category 状态为隐藏，则显示\n\n      for (let categoryUuid of Object.values(\n        targetClickItem.detectInfo.dependencyInstallStatus.dependencies,\n      )) {\n        myEchart.dispatchAction({\n          type: 'legendSelect',\n          // 图例名称\n          name: categoryUuid,\n        });\n      }\n\n      categoryStatus.isShow = true;\n      echartData.categoryMap.set(targetClickUuid, categoryStatus);\n    }\n  });\n});\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n}\n.base-container {\n  display: flex;\n  flex-direction: column;\n  width: 45vw;\n  align-items: center;\n  justify-content: center;\n}\n.echart-container {\n  display: flex;\n  width: 100%;\n  height: 48vh;\n  /* border: 1px solid #f0f0f0;\n  border-radius: 8px;\n\n  margin-left: 4px;\n  margin-right: 4px;\n  margin-top: 16px;\n  margin-bottom: 16px; */\n\n  border: 1px solid rgba(0, 0, 0, 0.07);\n  border-radius: 10px;\n  background: transparent;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\n}\ndiv.debug-container {\n  display: flex;\n  white-space: break-spaces;\n  word-break: break-all;\n}\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=25db7f47&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/npm-package-analyzer/npm-package-analyzer/node_modules/.pnpm/vue-loader@17.0.1_vue@3.2.45_webpack@5.88.2/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-25db7f47\"]])\n\nexport default __exports__"],"names":["DefaultShowLevel","MinShowLevel","colorStrList","colorList","_i","_colorStrList","length","colorStr","_i2","_arr","startPos","color","slice","push","materialColorList","sort","Math","random","infoDb2G6","packageRecordList","g6NodeList","g6EdgeList","uuidMap","Map","_iterator","_createForOfIteratorHelper","_step","s","n","done","packageRecord","value","set","uuid","_iterator3","packageList","_step3","item","err","e","f","uniqueNodeSet","Set","uniquePathSet","_iterator2","_step2","_toConsumableArray","record","node","id","label","concat","packageName","version","has","add","_Object$keys","Object","keys","detectInfo","dependencyInstallStatus","dependencies","dependencyPackageName","dependencyPackageUuid","pathLink","source","target","nodes","edges","colorCounter","getRgbColor","ConstColor","colorRgb","infoDb2Echarts","_ConstSymbolSize","echartsNodeList","echartsEdgeList","_iterator4","_step4","_iterator6","_step6","dataCategoryList","ConstSymbolSize","_defineProperty","categoryMap","_iterator5","_step5","recordCounter","packageColor","_i3","_arr2","_ConstSymbolSize2","symbolSize","deepLevel","isShow","Consts","symbol","itemStyle","category","indexOf","name","show","overflow","attributes","_i4","_Object$keys2","dependencyPackage","get","undefined","link","tooltip","size","containerRef","shallowRef","isDebug","ref","echartData","Util","packageAnaylzeResult","legendSelected","_echartData$categoryM","key","option","formatter","trigger","legend","data","selected","animationDurationUpdate","animationEasingUpdate","series","type","layout","animation","force","repulsion","edgeLength","gravity","categories","map","links","roam","lineStyle","width","curveness","opacity","emphasis","focus","position","edgeSymbol","edgeSymbolSize","edgeLabel","fontSize","values","myEchart","onMounted","_document$querySelect","_document$querySelect2","_document$querySelect3","_document$querySelect4","console","log","echarts","document","querySelector","clientWidth","height","clientHeight","setOption","on","params","dataType","targetClickUuid","targetClickItem","categoryStatus","_Object$values","categoryUuid","dispatchAction","_Object$values2","_Object$values3"],"sourceRoot":""}